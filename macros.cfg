[pause_resume]

[gcode_macro TUNE_PA]
gcode:
    #SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500 ACCEL_TO_DECEL=250
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.0025
    M118 Pressure advance tuning started

[gcode_macro TUNE_RETRACTION]
gcode:
    TUNING_TOWER COMMAND=SET_RETRACTION PARAMETER=RETRACT_LENGTH START=0 FACTOR=0.01
    M118 Retraction tuning started

[gcode_macro SET_FEEDRATE]
gcode:
    {% set PERCENTAGE = params.PERCENTAGE|default(100)|int %}
    M220 S{PERCENTAGE}

[gcode_macro TUNE_FEEDRATE]
gcode:
    TUNING_TOWER COMMAND="SET_FEEDRATE" PARAMETER=PERCENTAGE START=50 FACTOR=20 BAND=5
    M118 Feedrate tuning started

[gcode_macro TUNE_SQV]
gcode:
    SET_PRESSURE_ADVANCE ADVANCE=0
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
    TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=SQUARE_CORNER_VELOCITY START=1 FACTOR=0.5
    M118 SQV tuning started

[gcode_macro TUNE_ACCEL]
gcode:
    SET_PRESSURE_ADVANCE ADVANCE=0
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
    TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1250 FACTOR=100 BAND=5
    M118 Acceleration tuning started

[gcode_macro LOAD]
gcode:
    {% if printer.extruder.temperature < 235 %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=235
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM=235      
    {% endif %}
    M83
    G1 E85 F300
    M118 Filament loaded

[gcode_macro UNLOAD]
gcode:
    {% if printer.extruder.temperature < 235 %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=235
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM=235      
    {% endif %}
    M83
    G1 E5 F600
    G1 E-50 F1200
    M118 Filament unloaded

[gcode_macro WAIT_FIVE_MIN]
gcode:
    M118 Waiting 5 minutes
    G4 P300000

[gcode_macro WAIT_TEN_MIN]
gcode:
    M118 Waiting 10 minutes
    G4 P600000

[gcode_macro WAIT_TWENTY_MIN]
gcode:
    M118 Waiting 20 minutes
    G4 P1200000

# broken
#[delayed_gcode check_fan_rpm]
#initial_duration: 4.
#gcode: 
#    {% if (printer['heater_fan hotend_fan'].speed) and (hotend_fan.rpm < 60) %}
#      {action_call_remote_method("set_device_power",device="printer",state="off")}
#    {% endif %}
#    UPDATE_DELAYED_GCODE ID=check_fan_rpm DURATION=4

[homing_override]
set_position_z: 0
gcode:
  M400         # Wait for moves to finish
  # Reduce motor current  
  #
  SET_VELOCITY_LIMIT ACCEL=1200
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT=0.4
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT=0.4
  G0 Z10           # Hop Z-Axis
  G28 Y                 # Home Y-Axis
  G28 X                 # Home X-Axis
  # Go to center
  {% set x_home = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_home = printer.toolhead.axis_maximum.y|float / 2 %}
  G0 X{x_home - printer.configfile.config.bltouch.x_offset|float} Y{y_home - printer.configfile.config.bltouch.y_offset|float} F12000
  G28 Z                 # Home Z
  # Restore motor current
  #
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config['tmc2209 stepper_x'].run_current}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config['tmc2209 stepper_y'].run_current}
  Z_TILT_ADJUST
  G0 X{x_home - printer.configfile.config.bltouch.x_offset|float} Y{y_home - printer.configfile.config.bltouch.y_offset|float} F12000
  G28 Z                 # Home Z
  G0 Z30
  SET_VELOCITY_LIMIT ACCEL=3500

[gcode_macro START_PRINT]
gcode:
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set filament = params.FIL|string %}
    G21 # set units to millimeters	
    G90 # use absolute coordinates	
    M82 # use absolute distances for extrusion	
    G92 E0 # reset E
    M107 # start with the fan off
    # reset speed and feedrate modifiers    
    M220 S100
    M221 S100
    SET_GCODE_OFFSET Z=0.0
    {filament}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp} 
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedtemp}
    WAIT_FIVE_MIN
    # preheat while homing
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
    G28 # home the printer
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={hotendtemp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={hotendtemp}
    PURGE_LINE

[gcode_macro PURGE_LINE]
gcode:
    {% if printer.extruder.temperature < 175 %}
        M118 Purging line
        G0 X10 Y5 ; Go to front
        G0 Z0.2 ; Drop to bed
        G92 E0 ; zero the extruded length
        G1 X100 E15 F750 ; Extrude 15mm of filament in a 10cm line
        G92 E0 ; zero the extruded length    
    {% else  %}
        M118 Purging line preheat
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=235
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM=235
        M118 Purging line
        G0 X10 Y5 ; Go to front
        G0 Z0.2 ; Drop to bed
        G92 E0 ; zero the extruded length
        G1 X100 E15 F750 ; Extrude 15mm of filament in a 10cm line
        G92 E0 ; zero the extruded length
    {% endif %}


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E}
    G1 Z{z_safe}
    G90
    G1 X{x_park} Y{y_park}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E}
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_GCODE_OFFSET Z=0
    SET_PRESSURE_ADVANCE ADVANCE={printer.configfile.settings.extruder.pressure_advance} SMOOTH_TIME={printer.configfile.settings.extruder.pressure_advance_smooth_time}
    COOLDOWN
    M118 Print cancelled

[gcode_macro END_PRINT]
gcode:
    SET_GCODE_OFFSET Z=0
    SET_PRESSURE_ADVANCE ADVANCE={printer.configfile.settings.extruder.pressure_advance} SMOOTH_TIME={printer.configfile.settings.extruder.pressure_advance_smooth_time}
    # Retract and z+10
    G91
    G1 Z10 E-0.5
    G90
    # Park XY
    G1 X5 Y200
    COOLDOWN
    M84 # Disable steppers

[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8
    G1 Z10
    G90
    G1 X5 Y200
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro COOLDOWN]
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    M106 S169 # Turn on part cooling fan
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=150
    M107 # Turn off part cooling fan

#command: SEARCH_VARS s="profile"
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}